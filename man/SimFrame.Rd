% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/frame.R
\name{SimFrame}
\alias{SimFrame}
\title{Class: SimFrame
Represents the state of all individuals in a timestep}
\description{
Class: SimFrame
Represents the state of all individuals in a timestep

Class: SimFrame
Represents the state of all individuals in a timestep
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-get_state}{\code{SimFrame$get_state()}}
\item \href{#method-get_variable}{\code{SimFrame$get_variable()}}
\item \href{#method-get_constant}{\code{SimFrame$get_constant()}}
\item \href{#method-new}{\code{SimFrame$new()}}
\item \href{#method-clone}{\code{SimFrame$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_state"></a>}}
\subsection{Method \code{get_state()}}{
Get the index of individuals with a particular state
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimFrame$get_state(individual, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{individual}}{of interest}

\item{\code{state}}{of interest}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_variable"></a>}}
\subsection{Method \code{get_variable()}}{
Get a variable vector for an individual
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimFrame$get_variable(individual, variable)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{individual}}{of interest}

\item{\code{variable}}{of interest}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_constant"></a>}}
\subsection{Method \code{get_constant()}}{
Get a constant vector for an individual
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimFrame$get_constant(individual, constant)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{individual}}{of interest}

\item{\code{constant}}{of interest}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Create an initial SimFrame
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimFrame$new(individuals, states, variables, constants)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{individuals}}{is a list of Individual}

\item{\code{variables}}{is a list of variables for each individual at the
current timestep}

\item{\code{constants}}{is a list of constants for each individual at the
current timestep}

\item{\code{state}}{is a list of states for each individual at the current
timestep}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SimFrame$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
